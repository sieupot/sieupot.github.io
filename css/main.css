html {
  color: #151515;
  font-size: 1em;
  line-height: 1.4;
  min-width: 800px;
}

footer{
  height: 22px;
  margin-top: -22px;
  text-align: center;
  background-color: #eee;
}

#content {
  display: grid;
  height: 100vh;
  place-items: center center;
}

::-moz-selection,
::selection {
  background: #b3d4fc;
  text-shadow: none;
}

/*
 * No more space between images, audio, videos, iframes, canvas,
 * and the bottom of their containers:
 */

svg,
img,
audio,
video,
iframe,
canvas {
  vertical-align: middle;
}

/* ==========================================================================
   Browser Upgrade Prompt
   ========================================================================== */

.browserupgrade {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0;
}

/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

.hidden {
  display: none !important;
}

/*
* Hide only visually, but have it available for screen readers:
* https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
*
* 1. For long content, line feeds are not interpreted as spaces and small width
*    causes content to wrap 1 word per line:
*    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
*/

.sr-only {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  /* 1 */
}

/*
* Extends the .sr-only class to allow the element
* to be focusable when navigated to via the keyboard:
* https://www.drupal.org/node/897638
*/

.sr-only.focusable:active,
.sr-only.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: inherit;
  width: auto;
}

/*
* Hide visually and from screen readers, but maintain layout
*/

.invisible {
  visibility: hidden;
}

.clearfix:before,
.clearfix:after {
  content: " ";
  display: table;
}

.clearfix:after {
  clear: both;
}

.center-text {
  text-align: center;
}
.upper {
  text-transform: uppercase;
}
#actionPanel {
  padding: 30px;
}
.result{
  position: fixed;
  top: 50%;
  left: 50%;
  margin-top: -150px;
  margin-left: -150px;
  width: auto;
  height: 300px;
  display: none;
  z-index: 1;
}
#scoreGood, #scoreBad {
  display: flex;
}
#scoreGood > div, #scoreBad >div {
  padding-left: 30px;
  font-size: 18px;
}

.pointerCursor {
  cursor: pointer;
}

.glass {
  /* background styles */
  position: relative;
  display: inline-block;
  padding: 15px 25px;

  /* text styles */
  text-decoration: none;
  text-align: center;
  color: #fff;
  font-size: 25px;
  font-family: sans-serif;
  font-weight: 100;
  border-radius: 3px;
  box-shadow: 0 1px 4px -2px #333;
  text-shadow: 0 -1px #333;
}
.glass:after {
  content: '';
  position: absolute;
  top: 2px;
  left: 2px;
  width: calc(100% - 4px);
  height: 50%;
  background: linear-gradient(rgba(255, 255, 255, 0.8), rgba(255, 255, 255, 0.2));
}
.glass.blue {
  background-color: blue; /*for compatibility with older browsers*/
  background-image: linear-gradient(blue, #00a6ff);
}
.glass.green {
  background-color: green; /*for compatibility with older browsers*/
  background-image: linear-gradient(green, lightgreen);
}
.glass.orange {
  background-color: #b1620d; /*for compatibility with older browsers*/
  background-image: linear-gradient(#b1620d, #ff7a00);
}
.glass.blue:hover {
  background: linear-gradient(#083377, #31efef);
}
.glass.green:hover {
  background: linear-gradient(#007733, #0fa);
}
.glass.orange:hover {
  background: linear-gradient(#e57c05, #ffcb00);
}
