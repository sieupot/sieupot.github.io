html {
  color: #151515;
  font-size: 1em;
  line-height: 1.4;
  height: 100%;
  background-color: #EFE7E0;
}
body {
  height: 100%;
}
footer {
  text-align: center;
  background-color: #eee;
  position: fixed;
  bottom: 0;
  width: 100%;
  z-index: 9999;
}

::-moz-selection,
::selection {
  background: #b3d4fc;
  text-shadow: none;
}

/*
 * No more space between images, audio, videos, iframes, canvas,
 * and the bottom of their containers:
 */

svg,
img,
audio,
video,
iframe,
canvas {
  vertical-align: middle;
}

/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

.hidden {
  display: none !important;
}

/*
* Hide only visually, but have it available for screen readers:
* https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
*
* 1. For long content, line feeds are not interpreted as spaces and small width
*    causes content to wrap 1 word per line:
*    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
*/

.sr-only {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  /* 1 */
}

/*
* Extends the .sr-only class to allow the element
* to be focusable when navigated to via the keyboard:
* https://www.drupal.org/node/897638
*/

.sr-only.focusable:active,
.sr-only.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: inherit;
  width: auto;
}

/*
* Hide visually and from screen readers, but maintain layout
*/

.invisible {
  visibility: hidden;
}

.clearfix:before,
.clearfix:after {
  content: " ";
  display: table;
}

.clearfix:after {
  clear: both;
}

.center-text {
  text-align: center;
}
.upper {
  text-transform: uppercase;
}
